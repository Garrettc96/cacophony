/*
 * This file is generated by jOOQ.
 */
package com.example.cacophony.jooq.tables.records;

import com.example.cacophony.jooq.tables.Conversation;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ConversationRecord extends UpdatableRecordImpl<ConversationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>cacophony.conversation.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>cacophony.conversation.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>cacophony.conversation.type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cacophony.conversation.type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cacophony.conversation.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>cacophony.conversation.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>cacophony.conversation.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>cacophony.conversation.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConversationRecord
     */
    public ConversationRecord() {
        super(Conversation.CONVERSATION);
    }

    /**
     * Create a detached, initialised ConversationRecord
     */
    public ConversationRecord(UUID id, String type, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(Conversation.CONVERSATION);

        setId(id);
        setType(type);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }
}
